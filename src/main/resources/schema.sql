--DROP TABLE IF EXISTS users cascade;
--CREATE TABLE users(
--id serial PRIMARY KEY,
--    name_first varchar(100),
--    name_second varchar(100),
--    name_third varchar(100),
--    role varchar(10),
--    username varchar(100),
--    password varchar(100),
--    avatar varchar(500),
--    enabled boolean,
--    created timestamptz NOT NULL,
--    updated timestamptz NOT NULL
--);
--
--DROP TABLE IF EXISTS authorities cascade;
--CREATE TABLE authorities(
--	username varchar(100) NOT NULL,
--	authority varchar(50) NOT NULL,
--	primary key (username, authority)
----	,
----	constraint fk_authorities_users foreign key(username) references users(username)
--);
----create unique index ix_auth_username on authorities (username,authority);

--create table if not exists oauth_access_token (
--  token_id VARCHAR(255),
--  token LONG BYTEA,
--  authentication_id VARCHAR(255) PRIMARY KEY,
--  user_name VARCHAR(255),
--  client_id VARCHAR(255),
--  authentication LONG BYTEA,
--  refresh_token VARCHAR(255)
--);
--create table if not exists oauth_refresh_token (
--  token_id VARCHAR(255),
--  token LONG BYTEA,
--  authentication LONG BYTEA
--);


--postgres
--create table oauth_access_token (
--  token_id VARCHAR(256),
--  token bytea,
--  authentication_id VARCHAR(256),
--  user_name VARCHAR(256),
--  client_id VARCHAR(256),
--  authentication bytea,
--  refresh_token VARCHAR(256)
--);
--
--create table oauth_refresh_token (
--  token_id VARCHAR(256),
--  token bytea,
--  authentication bytea
--);